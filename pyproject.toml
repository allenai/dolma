[project]
name = "dolma"
version = "1.0.13"
description = "Data filters"
license = { text = "Apache-2.0" }
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "anyascii>=0.3.2",
    "blingfire==0.1.8",
    "boto3>=1.28",
    "cached-path>=1.5.1",
    # "fasttext==0.9.2",    # broken with new version of setuptools; using fasttext-wheel instead
    "fasttext-wheel==0.9.2",
    "fsspec>=2023.6.0",
    "msgspec>=0.14.2",
    "nltk==3.8.1",
    "omegaconf>=2.3.0",
    # "pycld2==0.41",
    # "pycld3==0.22",       # does not install correctly
    "platformdirs>=4.2.0",
    "pyyaml",
    "requests",
    "rich",
    "s3fs>=2023.6.0",
    "smart-open",
    "tokenizers>=0.15.0,<=0.19.1",
    "tqdm",
    "uniseg",
    "numpy<2",
    "necessary>=0.4.3",
    "charset-normalizer>=3.2.0",
    "zstandard>=0.23.0",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing",
    "Typing :: Typed",
]

[[project.authors]]
name = "Allen Institute for Artificial Intelligence"
email = "contact@allenai.org"

[[project.authors]]
name = "Luca Soldaini"
email = "luca@soldaini.net"

[[project.authors]]
name = "Kyle Lo"
email = "kylel@allenai.org"

[[project.authors]]
name = "Rodney Kinney"
email = "rodneyk@allenai.org"

[[project.authors]]
name = "Aakanksha Naik"
email = "aakankshan@allenai.org"

[[project.authors]]
name = "Abhilasha Ravichander"
email = "abhilashar@allenai.org"

[[project.authors]]
name = "Akshita Bhagia"
email = "akshitab@allenai.org"

[[project.authors]]
name = "Dirk Groeneveld"
email = "dirkg@allenai.org"

[[project.authors]]
name = "Dustin Schwenk"
email = "dustins@allenai.org"

[[project.authors]]
name = "Ian Magnusson"
email = "ianm@allenai.org"

[[project.authors]]
name = "Khyathi Chandu"
email = "khyathic@allenai.org"

[[project.maintainers]]
name = "Allen Institute for Artificial Intelligence"
email = "contact@allenai.org"

[project.urls]
Homepage = "https://github.com/allenai/dolma"


[project.scripts]
dolma = "dolma.cli.__main__:run_from_cli"

[project.optional-dependencies]
dev = [
    "ruff>=0.6.2",
    "ipdb>=0.13.0",
    "ipython>=8.4.0",
    "pyright>=1.1.322",
    "pytest>=5.2",
]
# extension to process code
code = ["detect-secrets==1.4.0", "beautifulsoup4>=4", "pygments", "regex"]
# extension to detect PIIs using presidio
pii = ["presidio_analyzer==2.2.32", "regex"]

# language detection; by default, we use fastttext, everything else is optional
lang = [
    "fasttext-wheel==0.9.2",
    "LTpycld2==0.42",                  # fork of pycld2 that works on Apple Silicon
    "lingua-language-detector>=2.0.0",
    "langdetect>=1.0.9",
]

# extension to parse warc files
warc = ["fastwarc", "w3lib", "url-normalize"]
trafilatura = [
    # must include warc dependencies
    "dolma[warc]",
    # core package
    "trafilatura>=1.6.1",
    # following are all for speeding up trafilatura
    "brotli",
    "cchardet >= 2.1.7; python_version < '3.11'",         # build issue
    "faust-cchardet >= 2.1.18; python_version >= '3.11'", # fix for build
    "htmldate[speed] >= 1.4.3",
    "py3langid >= 0.2.2",
]

resiliparse = ["dolma[warc]", "resiliparse"]

# all extensions
all = [
    "dolma[dev]",
    "dolma[code]",
    "dolma[pii]",
    "dolma[trafilatura]",
    "dolma[resiliparse]",
    "dolma[lang]",
]

[build-system]
requires = [
    "setuptools >= 61.0.0",
    "wheel",
    "maturin[patchelf]>=1.1,<2.0 ; platform_system=='Linux'",
    "maturin>=1.1,<2.0 ; platform_system!='Linux'",
]
build-backend = "maturin"


[tool.maturin]
python-source = "python"
features = ["pyo3/extension-module"]


[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
dolma = ["py.typed", "data/*"]


[tool.ruff]
line-length = 115
indent-width = 4
exclude = [
   "__pycache__",
   ".git",
   ".mypy_cache",
   ".pytest_cache",
   ".vscode",
   ".venv",
   "dist",
   "docs",
   "scripts",
   "sources",
   "src",
   "target",
   "tests/config",
   "tests/data",
   "tests/work",
   "temp"
]
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.pyright]
include = ["python/**/*.py", "tests/python/**/*.py"]
exclude = [
   "__pycache__",
   ".git",
   ".mypy_cache",
   ".pytest_cache",
   ".vscode",
   ".venv",
   "dist",
   "docs",
   "scripts",
   "sources",
   "src",
   "target",
   "tests/config",
   "tests/data",
   "tests/work",
   "temp"
]

reportMissingImports = "error"
reportMissingTypeStubs = false

pythonVersion = "3.10"
pythonPlatform = "All"
